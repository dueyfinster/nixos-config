# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $win Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Terminal
set $term wezterm

# Colors
# class                 border  backgr. text    indicator child_border
client.focused          #999999 #5f676a #999999 #999999   #999999
client.focused_inactive #999999 #5f676a #999999 #999999   #999999
client.unfocused        #333333 #222222 #888888 #292d2e   #1f1e1e
client.urgent           #999999 #5f676a #999999 #999999   #999999
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

default_border pixel 1
output eDP-1 mode 2880x1920 scale 2 scale_filter smart
input 2362:628:PIXA3854:00_093A:0274_Touchpad natural_scroll enabled tap enable

#output DP-10 pos 1440 0 res 1920x1080
 bindsym $mod+Control+Shift+Right move workspace to output right bindsym $mod+Control+Shift+Left move workspace to output left bindsym $mod+Control+Shift+Down move workspace to output down bindsym $mod+Control+Shift+Up move workspace to output up DP-10

# Wallpaper
output * bg /home/ngrogan/personal/nixos-config/wallpaper.png fill

# Key bindings
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Screenshots
    bindsym $mod+s exec grim  -g "$(slurp)" ~/Desktop/Screenshot-$(date +'%H:%M:%S.png')
    # Use grimshot.
    # bindsym Print exec grim- save area
    # bindsym Shift+Print exec grim save screen
    # bindsym $mod+Print exec grim save active


# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10


# Switch between workspaces
# workspace <next|prev|next_on_output|prev_on_output>
bindsym $mod+$win+Left workspace prev
bindsym $mod+$win+Right workspace next

# Media keys
# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
#bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym $mod+p exec swaymsg output eDP-1 toggle

# Brightness
bindsym XF86MonBrightnessDown exec light -U 10
bindsym XF86MonBrightnessUp exec light -A 10

# Volume
bindsym XF86AudioMute exec 'pulsemixer --toggle-mute'
bindsym XF86AudioRaiseVolume exec 'pulsemixer --change-volume +5'
bindsym XF86AudioLowerVolume exec 'pulsemixer --change-volume -5'

# Airplane mode
bindsym XF86RFKill exec nmcli radio all $(test $(nmcli -g wifi radio all) == "enabled" && "off" || echo "on")

# Framework Laptop F12: XF86AudioMedia
# Browser
set $browser firefox
set $url_focus https://frame.work
set $url_manual https://community.frame.work/

bindsym XF86AudioMedia exec $browser $url_focus
bindsym Shift+XF86AudioMedia exec $browser $url_manual

# Git token (paste it into "")
bindsym $mod+g exec wl-copy ""

# Layout stuff:
    # Split verticaly =
    bindsym $mod+v splitv

    # Split horizontaly ||
#    bindsym $mod+h splith

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

# Resizing containers:
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

input "type:touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
    accel_profile adaptive
    click_method clickfinger
    events disabled_on_external_mouse
    pointer_accel 0.8
    scroll_method two_finger
}

input "type:keyboard" {
  xkb_layout "us"
  xkb_variant "altgr-intl"
  xkb_options "caps:escape"
}

# Waybar
exec waybar &

# Startup
assign [app_id="firefox"] workspace number 1
assign [app_id="terminal1"] workspace number 2
assign [app_id="codium-url-handler"] workspace number 4
assign [class="spotify"] workspace number 6
assign [class="steam"] workspace number 7

exec wezterm start --class "terminal1" &
# exec qutebrowser &
exec codium --ozone-platform-hint=auto &

set $bemenu_args -i -p ''
bindsym $mod+Space exec bemenu-run $bemenu_args
# start your launcher
bindsym $mod+d          exec bemenu-run $bemenu_args

# alt+tab switch workspaces
bindsym $mod+Tab workspace back_and_forth

# super+tab cycle workspaces
bindsym $win+Tab workspace next

# super+` switch windows of same app
bindsym $mod+Grave exec ~/.config/sway/switch_same_app.sh

# Idle lock
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
set $lock swaylock -f -c 000000
exec swayidle -w \
    timeout 300 $lock \
    timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep $lock
# Manual lock
bindsym $mod+Shift+p exec $lock

#Window rules
for_window [app_id="com.github.finefindus.eyedropper"] floating enable
for_window [app_id="firefox" title="^Picture-in-Picture$"] \
    floating enable, move position 840 600, sticky enable
for_window [app_id="firefox" title= "Extension: (Bitwarden Password Manager) - Bitwarden â€” Mozilla Firefox"] floating enable
for_window [class="Spotify"] move scratchpad
bindsym $mod+Shift+m [class="Spotify"] scratchpad show

# Fixes
exec dbus-sway-environment
exec configure-gtk
exec systemctl --user import-environment

exec firefox &

include @sysconfdir@/sway/config.d/*
